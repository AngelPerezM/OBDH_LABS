/* Header file for function TTC in Ada language
 * Generated by TASTE on 2022-03-01 18:05:09
 * Context Parameters present : NO
 * Provided interfaces : HK_Task, TC, TM_Basic_Task, TM_Error, TM_Mode
 * Required interfaces : Current_Mode, Get, Last, Process_TC, TM
 * User-defined properties for this function:
 * DO NOT EDIT THIS FILE, IT WILL BE OVERWRITTEN DURING THE BUILD
 */

/* The purpose of this file is to provide a wrapper around the user code,
 * with a single interface that is independent of the implementation language
 * of the function. The parameters of each PI are blackboxes encoded
 * in the form specified in the interface view (Native, uPER, or ACN)
*/

#pragma once
#if defined(__unix__) || defined (__MSP430__)
   #include <stdlib.h>
   #include <stdio.h>
#else
   typedef unsigned size_t;
#endif

#ifdef __cplusplus
extern "C" {
#endif


// Function initialization - calls user startup code of all dependent functions
void init_ttc(void);

extern void adainit(void);

/* Provided interfaces */
void ttc_HK_Task(void);


void ttc_TC
      (const char *IN_telecommand, size_t IN_telecommand_len);



void ttc_TM_Basic_Task(void);


void ttc_TM_Error
      (const char *IN_contents, size_t IN_contents_len);



void ttc_TM_Mode
      (const char *IN_op_mode, size_t IN_op_mode_len);


#ifdef __cplusplus
}
#endif

