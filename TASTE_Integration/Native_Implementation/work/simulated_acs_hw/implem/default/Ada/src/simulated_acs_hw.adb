--  Body file for function Simulated_ACS_HW
--  Generated by TASTE on 2022-02-21 16:24:28
--  You can edit this file, it will not be overwritten
--  Provided interfaces : Read_MGM, control_MGT
--  Required interfaces : 
--  Timers              : 

with Ada.Text_IO,
     GNAT.Sockets;

use Ada.Text_IO,
    GNAT.Sockets;

with Ada.Exceptions;  use Ada.Exceptions;

package body Simulated_Acs_Hw is
   
   Address  : Sock_Addr_Type;
   Server   : Socket_Type;
   Socket   : Socket_Type;
   Channel  : Stream_Access;
   
   -------------------------
   -- Private subprograms --
   -------------------------
   
   procedure Initialize is
   begin

      Address.Addr := Inet_Addr ("127.0.0.1");
      Address.Port := 5000;

      Create_Socket (Server);

      Set_Socket_Option
        (Server,
         Socket_Level,
         (Reuse_Address, True));

      Bind_Socket (Server, Address);
      Listen_Socket (Server);
      Accept_Socket (Server, Socket, Address);

      Channel := Stream (Socket);
   exception
      when E: Socket_Error =>
         Put_Line ("init" & Exception_Message (E));
      when others =>
         Put_Line ("init exception");
   end Initialize;
   
   ------------------------
   -- PIs Implementation --
   ------------------------

   procedure Read_Mgm (BBT : out asn1SccT_B_B_T) is
   begin
      
      for i in BBT.Data'Range loop
         BBT.Data(i) := asn1SccT_Float (Float'Input (Channel)); --  Long_Float
      end loop;
      
   exception
         
      when E: Socket_Error =>
         Put_Line ("get" & Exception_Message (E));
      when others =>
         Put_Line ("get exception");
         
   end Read_Mgm;
   
   
   procedure Control_Mgt (Control : in out asn1SccT_Control) is
      F: Float;
   begin
      
      for i in Control.Data'Range loop
         F := Float (Control.Data (i));
         Float'Output (Channel, F);
      end loop;
      
   exception
         
      when E: Socket_Error =>
         Put_Line ("put" & Exception_Message (E));
      when others =>
         Put_Line ("put exception");
         
   end Control_Mgt;


begin
   
   Put_Line("[Simulated_ACS_HW] Started.")
   Initialize;
   
end Simulated_Acs_Hw;

