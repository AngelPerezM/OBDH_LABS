--  Body file for function Led_Handler
--  Generated by TASTE on 2022-05-30 13:02:01
--  You can edit this file, it will not be overwritten
--  Provided interfaces : Clear_LED, Set_LED
--  Required interfaces : 
--  Timers              : 

-- Based on the blink led demo for the STM32:
-- https://github.com/AdaCore/Ada_Drivers_Library/tree/master/arch/ARM/STM32/driver_demos/demo_gpio_direct_leds

with STM32.Device;  use STM32.Device;
with STM32.GPIO;    use STM32.GPIO;

package body Led_Handler is
   
   Green_LED  : GPIO_Point renames PD12;
   Orange_LED : GPIO_Point renames PD13;
   Red_LED    : GPIO_Point renames PD14;
   Blue_LED   : GPIO_Point renames PD15;
   -- all GPIO leds.
   
   type Leds is array (asn1SccLED) of GPIO_Point;
   GPIO_Mapping : Leds := (asn1Sccgreen  => Green_LED,
                           asn1Sccorange => Orange_LED,
                           asn1Sccred    => Red_LED,
                           asn1Sccblue   => Blue_LED);
   -- mapping from ASN1 enum to the actual GPIO_Point.
   

   -- Auxiliary procedures:
   
   procedure Initialize_LEDs;
   
   -- PIs Implementation:
   
   ---------------
   -- Clear_Led --
   ---------------
   procedure Clear_Led (Led : in out asn1SccLed) is
   
   begin
      Clear(GPIO_Mapping(Led));
   end Clear_Led;
   
   -------------
   -- Set_Led --
   -------------   
   procedure Set_Led (Led : in out asn1SccLed) is
   
   begin
      Set(GPIO_Mapping(Led));
   end Set_Led;
   
   ---------------------
   -- Initialize_LEDS --
   ---------------------
   
   --  @brief Enable the clock for the four LEDs and configure them as outputs.
   --  Note there is a procedure defined in STM32.Board to do this. We do it here
   --  to demonstrate the use of the GPIO interface.
   procedure Initialize_LEDs is
   begin
      Enable_Clock (GPIO_D);
      
      for G of GPIO_Mapping loop
         Configure_IO
           (G, (Mode        => Mode_Out,
                Resistors   => Floating,
                Speed       => Speed_100MHz,
                Output_Type => Push_Pull));
      end loop;
      
   end Initialize_LEDs;

begin
   
   Initialize_LEDs;

end Led_Handler;

